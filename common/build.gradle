// 公共基础库无须作为组件化模块
apply plugin: 'com.android.library'

def rootAndroidId = rootProject.ext.androidId

android {
    compileSdkVersion rootAndroidId.compileSdkVersion

    defaultConfig {
        minSdkVersion rootAndroidId.minSdkVersion
        targetSdkVersion rootAndroidId.targetSdkVersion
        versionCode rootAndroidId.versionCode
        versionName rootAndroidId.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // 这个方法接收三个非空的参数，第一个：确定值的类型，第二个：指定key的名字，第三个：传值（必须是String）
        // 为什么需要定义这个？因为src代码中有可能需要用到跨模块交互，如果是组件化模块显然不行
        // 切记：不能在android根节点，只能在defaultConfig或buildTypes节点下
        buildConfigField("boolean", "isRelease", String.valueOf(isRelease))
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation rootProject.ext.supportLibs
    implementation rootProject.ext.networkLibs
    implementation rootProject.ext.kotlinLibs
    implementation rootProject.ext.assistToolLibs

    api project(':arouter_annotation') // 注解
    api project(':arouter_api')
}